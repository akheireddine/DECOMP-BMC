MODULE main
  VAR
    c : signed word[32];
    x1 : signed word[32];
    x2 : signed word[32];
    p_a1 : process a1(self);
    p_a2 : process a2(self);
  ASSIGN
    init(c) := swconst(1, 32);
    init(x1) := swconst(0, 32);
    init(x2) := swconst(0, 32);
  TRANS
    !running

MODULE a1(sup)
  VAR
    pc : 1..11;
  ASSIGN
    init(pc) := 1;
    next(sup.x1) := 
            case
               pc = 3 : sup.c;
               pc = 6 : sup.x1 + sup.c;
               TRUE   : sup.x1;
            esac;
    next(sup.c) := 
            case
               pc = 9 : sup.x1;
               TRUE   : sup.c;
            esac;
  TRANS
      ( running & (
               pc = 1 & sup.c < swconst(600,32) & next(pc) = 2
             | pc = 2 & next(pc) = 3
             | pc = 3 & next(pc) = 4
             | pc = 4 & next(pc) = 5
             | pc = 5 & next(pc) = 6
             | pc = 6 & next(pc) = 7
             | pc = 7 & next(pc) = 8
             | pc = 8 & next(pc) = 9
             | pc = 9 & next(pc) = 10
             | pc = 10 & next(pc) = 1
             )
      | !running & next(pc) = pc )
    & ( pc = 2
      | pc = 3
      | pc = 6
      | pc = 9
       -> running )
    & ( pc = 1 & sup.c >= swconst(600,32)
      | pc = 11
       -> !running )


MODULE a2(sup)
  VAR
    pc : 1..11;
  ASSIGN
    init(pc) := 1;
    next(sup.x2) := 
            case
               pc = 3 : sup.c;
               pc = 6 : sup.x2 + sup.c;
               TRUE   : sup.x2;
            esac;
    next(sup.c) := 
            case
               pc = 9 : sup.x2;
               TRUE   : sup.c;
            esac;
  TRANS
      ( running & (
               pc = 1 & sup.c < swconst(600,32) & next(pc) = 2
             | pc = 2 & next(pc) = 3
             | pc = 3 & next(pc) = 4
             | pc = 4 & next(pc) = 5
             | pc = 5 & next(pc) = 6
             | pc = 6 & next(pc) = 7
             | pc = 7 & next(pc) = 8
             | pc = 8 & next(pc) = 9
             | pc = 9 & next(pc) = 10
             | pc = 10 & next(pc) = 1
             )
      | !running & next(pc) = pc )
    & ( pc = 2
      | pc = 3
      | pc = 6
      | pc = 9
       -> running )
    & ( pc = 1 & sup.c >= swconst(600,32)
      | pc = 11
       -> !running )



LTLSPEC ! F ( sup.c = swconst(949,32) )
